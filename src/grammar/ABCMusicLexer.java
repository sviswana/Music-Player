// Generated from ABCMusic.g4 by ANTLR 4.0


package grammar;


import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ABCMusicLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__4=1, T__3=2, T__2=3, T__1=4, T__0=5, REST=6, DIGIT=7, BASENOTE=8, TITLE=9, 
		COMPOSER=10, VOICE=11, LYRIC=12, COMMENT=13, METER=14, COMMONTIME=15, 
		CUTTIME=16, KEY=17, NOTELSTRICT=18, KEYACCIDENTAL=19, MINOR=20, LINEFEED=21, 
		WHITESPACE=22, ACCIDENTAL=23, TEMPO=24, OCTAVE=25, NOTELENGTH=26, NOTELENGTH2=27, 
		TUPLET2=28, TUPLET3=29, TUPLET4=30, LEFTP=31, BAR=32, THINTHIN=33, THINTHICK=34, 
		THICKTHIN=35, REPEATL=36, REPEATR=37, NTHREPEAT=38, LYRICALELEMENT=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'L:'", "'['", "'X:'", "'Q:'", "'z'", "DIGIT", "BASENOTE", "TITLE", 
		"COMPOSER", "VOICE", "LYRIC", "COMMENT", "METER", "COMMONTIME", "CUTTIME", 
		"KEY", "NOTELSTRICT", "KEYACCIDENTAL", "'m'", "LINEFEED", "WHITESPACE", 
		"ACCIDENTAL", "TEMPO", "OCTAVE", "NOTELENGTH", "NOTELENGTH2", "TUPLET2", 
		"TUPLET3", "TUPLET4", "'('", "'|'", "'||'", "'|]'", "'[|'", "'|:'", "':|'", 
		"NTHREPEAT", "LYRICALELEMENT"
	};
	public static final String[] ruleNames = {
		"T__4", "T__3", "T__2", "T__1", "T__0", "REST", "DIGIT", "BASENOTE", "TITLE", 
		"COMPOSER", "VOICE", "LYRIC", "COMMENT", "METER", "COMMONTIME", "CUTTIME", 
		"KEY", "NOTELSTRICT", "KEYACCIDENTAL", "MINOR", "LINEFEED", "WHITESPACE", 
		"ACCIDENTAL", "TEMPO", "OCTAVE", "NOTELENGTH", "NOTELENGTH2", "TUPLET2", 
		"TUPLET3", "TUPLET4", "LEFTP", "BAR", "THINTHIN", "THINTHICK", "THICKTHIN", 
		"REPEATL", "REPEATR", "NTHREPEAT", "LYRICALELEMENT"
	};



	    // This method makes the lexer or parser stop running if it encounters

	    // invalid input and throw a RuntimeException.

	    public void reportErrorsAsExceptions() {

	        removeErrorListeners();

	        addErrorListener(new ExceptionThrowingErrorListener());

	    }


	    private static class ExceptionThrowingErrorListener extends BaseErrorListener {

	        @Override

	        public void syntaxError(Recognizer<?, ?> recognizer,

	                Object offendingSymbol, int line, int charPositionInLine,

	                String msg, RecognitionException e) {

	            throw new RuntimeException(msg);

	        }

	    }



	public ABCMusicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ABCMusic.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 21: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4)\u016e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\6"+
		"\bb\n\b\r\b\16\bc\3\t\3\t\3\n\3\n\3\n\3\n\7\nl\n\n\f\n\16\no\13\n\3\n"+
		"\7\nr\n\n\f\n\16\nu\13\n\3\13\3\13\3\13\3\13\7\13{\n\13\f\13\16\13~\13"+
		"\13\3\13\7\13\u0081\n\13\f\13\16\13\u0084\13\13\3\f\3\f\3\f\3\f\7\f\u008a"+
		"\n\f\f\f\16\f\u008d\13\f\3\f\7\f\u0090\n\f\f\f\16\f\u0093\13\f\3\r\3\r"+
		"\3\r\3\r\7\r\u0099\n\r\f\r\16\r\u009c\13\r\3\r\3\r\7\r\u00a0\n\r\f\r\16"+
		"\r\u00a3\13\r\3\16\3\16\7\16\u00a7\n\16\f\16\16\16\u00aa\13\16\3\16\7"+
		"\16\u00ad\n\16\f\16\16\16\u00b0\13\16\3\17\3\17\3\17\3\17\7\17\u00b6\n"+
		"\17\f\17\16\17\u00b9\13\17\3\17\3\17\3\20\3\20\3\20\3\20\7\20\u00c1\n"+
		"\20\f\20\16\20\u00c4\13\20\3\20\3\20\3\21\3\21\3\21\3\21\7\21\u00cc\n"+
		"\21\f\21\16\21\u00cf\13\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\7\22\u00d8"+
		"\n\22\f\22\16\22\u00db\13\22\3\22\3\22\5\22\u00df\n\22\3\22\5\22\u00e2"+
		"\n\22\3\23\6\23\u00e5\n\23\r\23\16\23\u00e6\3\23\3\23\6\23\u00eb\n\23"+
		"\r\23\16\23\u00ec\3\24\3\24\3\25\3\25\3\26\3\26\5\26\u00f5\n\26\3\26\5"+
		"\26\u00f8\n\26\3\27\6\27\u00fb\n\27\r\27\16\27\u00fc\3\27\3\27\3\30\3"+
		"\30\3\30\3\30\3\30\3\30\5\30\u0107\n\30\3\31\3\31\3\31\3\31\3\32\6\32"+
		"\u010e\n\32\r\32\16\32\u010f\3\32\6\32\u0113\n\32\r\32\16\32\u0114\5\32"+
		"\u0117\n\32\3\33\7\33\u011a\n\33\f\33\16\33\u011d\13\33\3\33\3\33\6\33"+
		"\u0121\n\33\r\33\16\33\u0122\3\34\7\34\u0126\n\34\f\34\16\34\u0129\13"+
		"\34\3\34\6\34\u012c\n\34\r\34\16\34\u012d\3\35\3\35\7\35\u0132\n\35\f"+
		"\35\16\35\u0135\13\35\3\35\3\35\3\36\3\36\7\36\u013b\n\36\f\36\16\36\u013e"+
		"\13\36\3\36\3\36\3\37\3\37\7\37\u0144\n\37\f\37\16\37\u0147\13\37\3\37"+
		"\3\37\3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'"+
		"\3\'\3\'\3\'\5\'\u0162\n\'\3(\6(\u0165\n(\r(\16(\u0166\3(\3(\3(\3(\5("+
		"\u016d\n(\2)\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13"+
		"\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25"+
		"\1)\26\1+\27\1-\30\2/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1"+
		"= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1\3\2!\3\62;\4CIci\4\"\"))\5"+
		"\13\13\"`b\u0080\4\"\"))\5\13\13\"`b\u0080\4\"\"))\5\13\13\"`b\u0080\4"+
		"\"\"))\5\13\13\"`b\u0080\4\"\"))\5\13\13\"`b\u0080\4\"\"))\4\"\"))\4\""+
		"\"))\4\"\"))\3CI\3\62;\3\62;\4%%dd\5\13\13\17\17\"\"\4??``\3))\4))..\3"+
		"\62;\3\62;\3\62;\4\"\"))\4\"\"))\4\"\"))\6,,//aa\u0080\u0080\u0196\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\3Q\3\2\2\2\5S\3\2\2\2\7V\3"+
		"\2\2\2\tX\3\2\2\2\13[\3\2\2\2\r^\3\2\2\2\17a\3\2\2\2\21e\3\2\2\2\23g\3"+
		"\2\2\2\25v\3\2\2\2\27\u0085\3\2\2\2\31\u0094\3\2\2\2\33\u00a4\3\2\2\2"+
		"\35\u00b1\3\2\2\2\37\u00bc\3\2\2\2!\u00c7\3\2\2\2#\u00d3\3\2\2\2%\u00e4"+
		"\3\2\2\2\'\u00ee\3\2\2\2)\u00f0\3\2\2\2+\u00f7\3\2\2\2-\u00fa\3\2\2\2"+
		"/\u0106\3\2\2\2\61\u0108\3\2\2\2\63\u0116\3\2\2\2\65\u011b\3\2\2\2\67"+
		"\u0127\3\2\2\29\u012f\3\2\2\2;\u0138\3\2\2\2=\u0141\3\2\2\2?\u014a\3\2"+
		"\2\2A\u014c\3\2\2\2C\u014e\3\2\2\2E\u0151\3\2\2\2G\u0154\3\2\2\2I\u0157"+
		"\3\2\2\2K\u015a\3\2\2\2M\u0161\3\2\2\2O\u016c\3\2\2\2QR\7_\2\2R\4\3\2"+
		"\2\2ST\7N\2\2TU\7<\2\2U\6\3\2\2\2VW\7]\2\2W\b\3\2\2\2XY\7Z\2\2YZ\7<\2"+
		"\2Z\n\3\2\2\2[\\\7S\2\2\\]\7<\2\2]\f\3\2\2\2^_\7|\2\2_\16\3\2\2\2`b\t"+
		"\2\2\2a`\3\2\2\2bc\3\2\2\2ca\3\2\2\2cd\3\2\2\2d\20\3\2\2\2ef\t\3\2\2f"+
		"\22\3\2\2\2gh\7V\2\2hi\7<\2\2im\3\2\2\2jl\t\4\2\2kj\3\2\2\2lo\3\2\2\2"+
		"mk\3\2\2\2mn\3\2\2\2ns\3\2\2\2om\3\2\2\2pr\t\5\2\2qp\3\2\2\2ru\3\2\2\2"+
		"sq\3\2\2\2st\3\2\2\2t\24\3\2\2\2us\3\2\2\2vw\7E\2\2wx\7<\2\2x|\3\2\2\2"+
		"y{\t\6\2\2zy\3\2\2\2{~\3\2\2\2|z\3\2\2\2|}\3\2\2\2}\u0082\3\2\2\2~|\3"+
		"\2\2\2\177\u0081\t\7\2\2\u0080\177\3\2\2\2\u0081\u0084\3\2\2\2\u0082\u0080"+
		"\3\2\2\2\u0082\u0083\3\2\2\2\u0083\26\3\2\2\2\u0084\u0082\3\2\2\2\u0085"+
		"\u0086\7X\2\2\u0086\u0087\7<\2\2\u0087\u008b\3\2\2\2\u0088\u008a\t\b\2"+
		"\2\u0089\u0088\3\2\2\2\u008a\u008d\3\2\2\2\u008b\u0089\3\2\2\2\u008b\u008c"+
		"\3\2\2\2\u008c\u0091\3\2\2\2\u008d\u008b\3\2\2\2\u008e\u0090\t\t\2\2\u008f"+
		"\u008e\3\2\2\2\u0090\u0093\3\2\2\2\u0091\u008f\3\2\2\2\u0091\u0092\3\2"+
		"\2\2\u0092\30\3\2\2\2\u0093\u0091\3\2\2\2\u0094\u0095\7y\2\2\u0095\u0096"+
		"\7<\2\2\u0096\u009a\3\2\2\2\u0097\u0099\t\n\2\2\u0098\u0097\3\2\2\2\u0099"+
		"\u009c\3\2\2\2\u009a\u0098\3\2\2\2\u009a\u009b\3\2\2\2\u009b\u00a1\3\2"+
		"\2\2\u009c\u009a\3\2\2\2\u009d\u00a0\t\13\2\2\u009e\u00a0\5O(\2\u009f"+
		"\u009d\3\2\2\2\u009f\u009e\3\2\2\2\u00a0\u00a3\3\2\2\2\u00a1\u009f\3\2"+
		"\2\2\u00a1\u00a2\3\2\2\2\u00a2\32\3\2\2\2\u00a3\u00a1\3\2\2\2\u00a4\u00a8"+
		"\7\'\2\2\u00a5\u00a7\t\f\2\2\u00a6\u00a5\3\2\2\2\u00a7\u00aa\3\2\2\2\u00a8"+
		"\u00a6\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00ae\3\2\2\2\u00aa\u00a8\3\2"+
		"\2\2\u00ab\u00ad\t\r\2\2\u00ac\u00ab\3\2\2\2\u00ad\u00b0\3\2\2\2\u00ae"+
		"\u00ac\3\2\2\2\u00ae\u00af\3\2\2\2\u00af\34\3\2\2\2\u00b0\u00ae\3\2\2"+
		"\2\u00b1\u00b2\7O\2\2\u00b2\u00b3\7<\2\2\u00b3\u00b7\3\2\2\2\u00b4\u00b6"+
		"\t\16\2\2\u00b5\u00b4\3\2\2\2\u00b6\u00b9\3\2\2\2\u00b7\u00b5\3\2\2\2"+
		"\u00b7\u00b8\3\2\2\2\u00b8\u00ba\3\2\2\2\u00b9\u00b7\3\2\2\2\u00ba\u00bb"+
		"\5%\23\2\u00bb\36\3\2\2\2\u00bc\u00bd\7O\2\2\u00bd\u00be\7<\2\2\u00be"+
		"\u00c2\3\2\2\2\u00bf\u00c1\t\17\2\2\u00c0\u00bf\3\2\2\2\u00c1\u00c4\3"+
		"\2\2\2\u00c2\u00c0\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3\u00c5\3\2\2\2\u00c4"+
		"\u00c2\3\2\2\2\u00c5\u00c6\7E\2\2\u00c6 \3\2\2\2\u00c7\u00c8\7O\2\2\u00c8"+
		"\u00c9\7<\2\2\u00c9\u00cd\3\2\2\2\u00ca\u00cc\t\20\2\2\u00cb\u00ca\3\2"+
		"\2\2\u00cc\u00cf\3\2\2\2\u00cd\u00cb\3\2\2\2\u00cd\u00ce\3\2\2\2\u00ce"+
		"\u00d0\3\2\2\2\u00cf\u00cd\3\2\2\2\u00d0\u00d1\7E\2\2\u00d1\u00d2\7~\2"+
		"\2\u00d2\"\3\2\2\2\u00d3\u00d4\7M\2\2\u00d4\u00d5\7<\2\2\u00d5\u00d9\3"+
		"\2\2\2\u00d6\u00d8\t\21\2\2\u00d7\u00d6\3\2\2\2\u00d8\u00db\3\2\2\2\u00d9"+
		"\u00d7\3\2\2\2\u00d9\u00da\3\2\2\2\u00da\u00dc\3\2\2\2\u00db\u00d9\3\2"+
		"\2\2\u00dc\u00de\t\22\2\2\u00dd\u00df\5\'\24\2\u00de\u00dd\3\2\2\2\u00de"+
		"\u00df\3\2\2\2\u00df\u00e1\3\2\2\2\u00e0\u00e2\5)\25\2\u00e1\u00e0\3\2"+
		"\2\2\u00e1\u00e2\3\2\2\2\u00e2$\3\2\2\2\u00e3\u00e5\t\23\2\2\u00e4\u00e3"+
		"\3\2\2\2\u00e5\u00e6\3\2\2\2\u00e6\u00e4\3\2\2\2\u00e6\u00e7\3\2\2\2\u00e7"+
		"\u00e8\3\2\2\2\u00e8\u00ea\7\61\2\2\u00e9\u00eb\t\24\2\2\u00ea\u00e9\3"+
		"\2\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00ea\3\2\2\2\u00ec\u00ed\3\2\2\2\u00ed"+
		"&\3\2\2\2\u00ee\u00ef\t\25\2\2\u00ef(\3\2\2\2\u00f0\u00f1\7o\2\2\u00f1"+
		"*\3\2\2\2\u00f2\u00f8\7\17\2\2\u00f3\u00f5\7\17\2\2\u00f4\u00f3\3\2\2"+
		"\2\u00f4\u00f5\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f8\7\f\2\2\u00f7\u00f2"+
		"\3\2\2\2\u00f7\u00f4\3\2\2\2\u00f8,\3\2\2\2\u00f9\u00fb\t\26\2\2\u00fa"+
		"\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fc\u00fd\3\2"+
		"\2\2\u00fd\u00fe\3\2\2\2\u00fe\u00ff\b\27\2\2\u00ff.\3\2\2\2\u0100\u0107"+
		"\t\27\2\2\u0101\u0102\7`\2\2\u0102\u0107\7`\2\2\u0103\u0107\7a\2\2\u0104"+
		"\u0105\7a\2\2\u0105\u0107\7a\2\2\u0106\u0100\3\2\2\2\u0106\u0101\3\2\2"+
		"\2\u0106\u0103\3\2\2\2\u0106\u0104\3\2\2\2\u0107\60\3\2\2\2\u0108\u0109"+
		"\5%\23\2\u0109\u010a\7?\2\2\u010a\u010b\5\17\b\2\u010b\62\3\2\2\2\u010c"+
		"\u010e\t\30\2\2\u010d\u010c\3\2\2\2\u010e\u010f\3\2\2\2\u010f\u010d\3"+
		"\2\2\2\u010f\u0110\3\2\2\2\u0110\u0117\3\2\2\2\u0111\u0113\t\31\2\2\u0112"+
		"\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114\u0112\3\2\2\2\u0114\u0115\3\2"+
		"\2\2\u0115\u0117\3\2\2\2\u0116\u010d\3\2\2\2\u0116\u0112\3\2\2\2\u0117"+
		"\64\3\2\2\2\u0118\u011a\t\32\2\2\u0119\u0118\3\2\2\2\u011a\u011d\3\2\2"+
		"\2\u011b\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011c\u011e\3\2\2\2\u011d\u011b"+
		"\3\2\2\2\u011e\u0120\7\61\2\2\u011f\u0121\t\33\2\2\u0120\u011f\3\2\2\2"+
		"\u0121\u0122\3\2\2\2\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123\66"+
		"\3\2\2\2\u0124\u0126\t\34\2\2\u0125\u0124\3\2\2\2\u0126\u0129\3\2\2\2"+
		"\u0127\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u012b\3\2\2\2\u0129\u0127"+
		"\3\2\2\2\u012a\u012c\7\61\2\2\u012b\u012a\3\2\2\2\u012c\u012d\3\2\2\2"+
		"\u012d\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e8\3\2\2\2\u012f\u0133\5"+
		"? \2\u0130\u0132\t\35\2\2\u0131\u0130\3\2\2\2\u0132\u0135\3\2\2\2\u0133"+
		"\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0136\3\2\2\2\u0135\u0133\3\2"+
		"\2\2\u0136\u0137\7\64\2\2\u0137:\3\2\2\2\u0138\u013c\5? \2\u0139\u013b"+
		"\t\36\2\2\u013a\u0139\3\2\2\2\u013b\u013e\3\2\2\2\u013c\u013a\3\2\2\2"+
		"\u013c\u013d\3\2\2\2\u013d\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f\u0140"+
		"\7\65\2\2\u0140<\3\2\2\2\u0141\u0145\5? \2\u0142\u0144\t\37\2\2\u0143"+
		"\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0143\3\2\2\2\u0145\u0146\3\2"+
		"\2\2\u0146\u0148\3\2\2\2\u0147\u0145\3\2\2\2\u0148\u0149\7\66\2\2\u0149"+
		">\3\2\2\2\u014a\u014b\7*\2\2\u014b@\3\2\2\2\u014c\u014d\7~\2\2\u014dB"+
		"\3\2\2\2\u014e\u014f\7~\2\2\u014f\u0150\7~\2\2\u0150D\3\2\2\2\u0151\u0152"+
		"\7~\2\2\u0152\u0153\7_\2\2\u0153F\3\2\2\2\u0154\u0155\7]\2\2\u0155\u0156"+
		"\7~\2\2\u0156H\3\2\2\2\u0157\u0158\7~\2\2\u0158\u0159\7<\2\2\u0159J\3"+
		"\2\2\2\u015a\u015b\7<\2\2\u015b\u015c\7~\2\2\u015cL\3\2\2\2\u015d\u015e"+
		"\7]\2\2\u015e\u0162\7\63\2\2\u015f\u0160\7]\2\2\u0160\u0162\7\64\2\2\u0161"+
		"\u015d\3\2\2\2\u0161\u015f\3\2\2\2\u0162N\3\2\2\2\u0163\u0165\7\"\2\2"+
		"\u0164\u0163\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0164\3\2\2\2\u0166\u0167"+
		"\3\2\2\2\u0167\u016d\3\2\2\2\u0168\u016d\t \2\2\u0169\u016a\7^\2\2\u016a"+
		"\u016d\7/\2\2\u016b\u016d\7~\2\2\u016c\u0164\3\2\2\2\u016c\u0168\3\2\2"+
		"\2\u016c\u0169\3\2\2\2\u016c\u016b\3\2\2\2\u016dP\3\2\2\2(\2cms|\u0082"+
		"\u008b\u0091\u009a\u009f\u00a1\u00a8\u00ae\u00b7\u00c2\u00cd\u00d9\u00de"+
		"\u00e1\u00e6\u00ec\u00f4\u00f7\u00fc\u0106\u010f\u0114\u0116\u011b\u0122"+
		"\u0127\u012d\u0133\u013c\u0145\u0161\u0166\u016c";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}